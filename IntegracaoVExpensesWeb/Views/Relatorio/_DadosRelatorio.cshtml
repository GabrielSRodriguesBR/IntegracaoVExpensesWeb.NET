@using System.Globalization
@using IntegracaoVExpensesWeb.Business.Utils
@model List<IntegracaoVExpensesWeb.Models.RelatorioModel>
<script>


    const ReloadDados = (id) => {
	    const mes = $(id).data('mes');
	    const ano = $(id).data('ano');
	    $(id).showLoadingMessage();
	    $(id).load('@Url.Action("_DadosRelatorio")', { mes: mes, ano: ano });
    }


    const GetRelatorios = (key) => {
        return $(`.table_pendentes_${key} table .relatorioId`).map((i, e) => { return $(e).data('id') }).get();
    }

    const IntegrarDespesasSAP = (key) => {
        const listaRelatorios = GetRelatorios(key);
		if (listaRelatorios.length > 0) {

			bootbox.confirm({
				title: 'Confirmar',
				message: 'Confirmar a integração de despesas com SAP?',
				buttons: {
					confirm: {
						label: '<i class="fa fa-check"></i> OK',
						className: 'btn-success'
					},
					cancel: {
						label: '<i class="fa fa-times"></i> Cancelar',
						className: 'btn-danger'
					}
				},
				callback: function (result) {
					if (!result) return;
                    $('button').prop('disabled', true);
                    let dialog = bootbox.dialog({
                        message: '<p class="text-center mb-0"><i class="fa-solid fa-spin fa-gear"></i> Integrando despesas no SAP...</p>',
                            closeButton: false
                     });


					$.post('@Url.Action("IntegrarDespesasSAP")', { listaRelatorios: listaRelatorios }, (result) => {
                        if (result.status) {
                            Alert(result.text, result.status);
                            ReloadDados(`#comp_${key}`);
                        }
                        else {
                            bootbox.alert({
                                title: '<span class="text-danger"><i class="fa fa-warning"></i> Erro ao integrar ao SAP</span>',
                                message: `<h4 style="word-break: break-all;"><b>${result.text}</b></h4><br/><small>${result.exception ?? ""}</small>`,
                                size: 'large'
                            })
                        }
					}, 'json')
                    .fail(function (xhr, status, error) {
                    	Alert("Ocorreu um erro: " + error, false);
					})
                    .always(function () {
                        $('button').prop('disabled', false);
                        dialog.modal('hide');
                    });
				}

			})






		}

	}

    const ExportarDespesas = (key) => {
        const listaRelatorios = GetRelatorios(key);
        if (listaRelatorios.length > 0) {

            var $form = $('<form>', {
                action: '@Url.Action("ExportarDespesas")',
                method: 'post'
            });
            listaRelatorios.forEach(function (id) {
                var $input = $('<input>', {
                    type: 'hidden',
                    name: 'listaRelatorios',
                    value: id
                });
                $form.append($input);
            });
            $form.appendTo('body').submit().remove();
        }
    }

    const IntegrarPagamentos =  (key) =>  {
        const listaRelatorios = GetRelatorios(key);
		if (listaRelatorios.length > 0) {

			const getCurrentDate = () => {
				var today = new Date();
				var day = ("0" + today.getDate()).slice(-2);
				var month = ("0" + (today.getMonth() + 1)).slice(-2);
				var year = today.getFullYear();
				return year + "-" + month + "-" + day;
			}

			bootbox.prompt({
				title: 'Informe a data de pagamento',
				inputType: 'date',
				value: getCurrentDate(),
				buttons: {
					confirm: {
						label: '<i class="fa fa-check"></i> OK',
						className: 'btn-success'
					},
					cancel: {
						label: '<i class="fa fa-times"></i> Cancelar',
						className: 'btn-danger'
					}
				},
				callback: function (dtPagamento) {
                    if (!dtPagamento) return;
                    let dialog = bootbox.dialog({
                        message: '<p class="text-center mb-0"><i class="fa-solid fa-spin fa-gear"></i> Integrando pagamento no vExpenses...</p>',
                        closeButton: false
                    });
					$('button').prop('disabled', true);
                    $.post('@Url.Action("IntegrarPagamentos")', { listaRelatorios: listaRelatorios, dtPagamento: dtPagamento }, (result) => {
                        if (result.status) {
                            Alert(result.text, result.status);
                            ReloadDados(`#comp_${key}`);
                        }
                        else {
                            bootbox.alert({
                                title: '<span class="text-danger"><i class="fa fa-warning"></i> Erro ao integrar ao SAP</span>',
                                message: `<h4 style="word-break: break-all;"><b>${result.text}</b></h4><br/><small>${result.exception ?? ""}</small>`,
                                size: 'large'
                            })
                        }
					}, 'json')
                    .fail(function (xhr, status, error) {
                    	Alert("Ocorreu um erro: " + error, false);
					})
                    .always(function () {
                        $('button').prop('disabled', false);
                        dialog.modal('hide');
                    });

				}
			});
		}
	}
</script>
@{
    bool pendenciaIntegracao = Model.Any(s => s.DocEntry == null);
    int mes = Model.FirstOrDefault().DataIntegracao.Month;
    int ano = Model.FirstOrDefault().DataIntegracao.Year;
    string key = $"{mes}_{ano}";
    CultureInfo culturePTBR = new CultureInfo("pt-BR");
    string nomeDoMes = culturePTBR.DateTimeFormat.GetMonthName(mes).Capitalize();
}

<div class="col-md-12 tabs">
    <ul class="nav nav-pills mb-3" id="pills-tab_@key" role="tablist">
        @if (pendenciaIntegracao)
        {
            <li class="nav-item" role="presentation">
                <button class="nav-link active nav-pendentes" id="pills-pendentes-tab_@key" data-bs-toggle="pill" data-bs-target="#pills-pendentes_@key" type="button" role="tab" aria-controls="pills-home" aria-selected="true">
                    <i class="fa-solid fa-triangle-exclamation"></i> Aguardando Integração
                </button>
            </li>
        }

        <li class="nav-item" role="presentation">
            <button class="nav-link @Html.Raw(!pendenciaIntegracao ? "active" : "") nav-integrados" id="pills-integrados-tab_@key" data-bs-toggle="pill" data-bs-target="#pills-integrados_@key" type="button" role="tab" aria-controls="pills-profile" aria-selected="false">
                <i class="fa-solid fa-circle-check"></i> Integrados
            </button>
        </li>

    </ul>
    <div class="tab-content" id="@Html.Raw($"pills-tab_{@key}Content")">
        @if (pendenciaIntegracao)
        {
            <div class="tab-pane fade show active" id="pills-pendentes_@key" role="tabpanel" aria-labelledby="pills-pendentes-tab">
                <div class="button-container">
                    <button class="btn btn-outline-danger" onclick="IntegrarDespesasSAP('@key')"><i class="fa-solid fa-arrow-up-right-from-square"></i> Integrar despesas de <b>@ano - @nomeDoMes</b> no SAP</button>
                    <button class="btn btn-outline-success" onclick="ExportarDespesas('@key')"><i class="fa-regular fa-file-excel"></i> Exportar despesas de <b>@ano - @nomeDoMes</b></button>
                </div>
                <div class="table_pendentes_@key">
                    @Html.Partial("_TabelaRelatorio", Model.Where(s => s.DocEntry == null).ToList())
                </div>
            </div>
        }

        <div class="tab-pane fade @Html.Raw(!pendenciaIntegracao ? "show active" : "") " id="pills-integrados_@key" role="tabpanel" aria-labelledby="pills-integrados-tab">
            @if (Model.Any(s => s.DocEntry != null && s.DataPagamento == null))
            {
                <div class="button-container">
                    <button class="btn btn-outline-success" onclick="IntegrarPagamentos('@key')"><i class="fa-solid fa-arrow-up-right-from-square"></i> Informar pagamentos de <b>@ano - @nomeDoMes</b> no vExpenses</button>
                </div>
            }

            <div class="table_pendentes_pag_@key">
                @Html.Partial("_TabelaRelatorio", Model.Where(s => s.DocEntry != null).ToList())
            </div>

        </div>
    </div>
</div>




